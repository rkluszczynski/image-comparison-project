apply plugin: 'grunt'
apply plugin: 'node'

//import org.gradle.api.tasks.Exec
//
//// Get the path for the locally installed binaries
//task npmBin << {
//    new ByteArrayOutputStream().withStream { os ->
//        def result = exec {
//            executable = 'npm'
//            args = ['bin']
//            standardOutput = os
//        }
//        ext.binPath = os.toString().trim() + "/"
//    }
//}
//
//// Install packages from package.json
//task npm(type: Exec) {
//    description = "Grab NodeJS dependencies (from package.json)"
//    commandLine = ["npm", "install"]
//    inputs.file "package.json"
//    outputs.dir "node_modules"
//
//    tasks.npmBin.execute()
//
//}
//
//// Install the bower components for front-end library management
//task bower(dependsOn: 'npm', type: Exec){
//    commandLine "${npmBin.binPath}bower", 'install'
//}

// makes sure on each build that grunt is installed
grunt_build.dependsOn 'installGrunt'

// processes your package.json before running grunt build
grunt_build.dependsOn 'npmInstall'

// runs "grunt build" as part of your gradle build
build.dependsOn grunt_build


node {
    // Version of node to use.
    version = '0.11.10'

    // Base URL for fetching node distributions (change if you have a mirror).
    distBaseUrl = 'http://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")
}


buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.moowork.gradle:gradle-grunt-plugin:0.5'
        classpath 'com.moowork.gradle:gradle-node-plugin:0.5'
    }
}
